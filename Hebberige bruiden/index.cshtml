@using WebMatrix.Data;
@using WebMatrix.WebData;
@{

    // c# Database code
    string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\Gift_database.mdf;Integrated Security=True";
    string provider = "System.Data.SqlClient";
    Database db = Database.OpenConnectionString(connectionString, provider);
    //Input giftkey code:
    //Kijkt of de form GiftKeyname ingevuld is, zoja dan maakt hij selectGiftQuery gebruikbaar
    dynamic SelectGiftQuery = null;
    int Giftcount = 0;

    string hidden = null;
    if (Request["GiftKeyname"] == null)
    {
        hidden = "hiddendiv";
    }
    string key = Request["GiftKeyname"];
    if (key == null)
    {
        SelectGiftQuery = db.Query("SELECT Gift from Gifts where GiftKey = '0' AND Bought = 'False' Order by Priority");
    }
    else
    {
        SelectGiftQuery = db.Query("SELECT Gift from Gifts where GiftKey = @0 AND Bought = 'False' Order by Priority asc", key);
    }
    

    // choose gift code
    // kijkt of er een gift geselecteerd is en deze bij de ingevoerde key hoord. Als dit zo is wordt de gift uit de database gehaald.
    int count = 0;
    string SelectedGift = Request["ChooseGift"];
    dynamic RemoveGiftQuery = db.Query("SELECT Gift from Gifts where GiftKey = @0", key);
    dynamic RemoveGiftkeyQuery = db.Query("SELECT GiftKey from Gifts where GiftKey = @0", key);

    foreach (dynamic row in db.Query("SELECT Gift From Gifts "))
    {
        if (RemoveGiftQuery.Count != 0 && SelectedGift != null)
        {
            if (RemoveGiftQuery[count].Gift == SelectedGift && RemoveGiftkeyQuery[count].GiftKey == key)
            {

                db.Execute("Update Gifts set Bought = 'True' where Gift = @0 AND Giftkey = @1", SelectedGift, key);

                Response.Redirect("~/index");
                break;
            }
            count++;
        }
    }

}
<!DOCTYPE html>
<html lang="en">

<body>


    <!-- Render Shared Header-->
    @RenderPage("~/Shared/_Header.cshtml")

    <!--GiftKey-->
    <!--Form om de Giftkey op te vragen-->
    <form method="post">
        @AntiForgery.GetHtml()
        <div class="row center-align">
            <div class="col s5 m5 l5">
                <div class="input-field">
                    <input id="CollectioniD" type="text" name="GiftKeyname" value="@key" class="validate" />
                    <label for="CollectioniD"> GiftKey</label>
                </div>
            </div>
        </div>
        <!-- GiftList-->
        <!--Als de giftkey ingevoerd is worden alle gifts weer gegeven van die lijst, gesorteerd op prioriteit.  -->
        <div class="row center-align">
            <div class=" col s5 m5 l5">
                <ul class="collection">
                    @{
                        Giftcount = 0;
                        if (key != null && SelectedGift == null)
                        {
                            foreach (dynamic row in db.Query("SELECT * FROM Gifts WHERE Giftkey = @0 AND Bought = 'False' ORDER BY Priority asc", key))
                            {
                                if (SelectGiftQuery[Giftcount].Gift != "")
                                {

                                <li class="collection-item waves-effect">Gift @(Giftcount + 1)  :@SelectGiftQuery[Giftcount].Gift</li>

                                }
                        Giftcount++;
                             }
                         }
                    }
                </ul>
            </div>
        </div>
        <!--Name&Gift-->
        <!--wanneer de giftkey ingevoerd is worden de bijbehoordende dropdown menu weer gegeven-->
        <div class="row center-align">
            <div class="col s5 m5 l5 ">
                <div class=" input-field col s10 m10 l10 @hidden">
                    <select name="ChooseGift">
                        <option value="" disabled selected></option>
                        @{ Giftcount = 0;
                            if (SelectGiftQuery.Count != 0)
                            {
                                dynamic boughtQuery = db.Query("Select Bought FROM Gifts WHERE Giftkey = @0 AND Bought = 'false'", key);
                                foreach (dynamic row in db.Query("SELECT * FROM Gifts WHERE Giftkey = @0 AND Bought = 'False' ", key))
                                {
                                    if (SelectGiftQuery[Giftcount].Gift != "" && boughtQuery[Giftcount].Bought == false)
                                    {
                                    <option value="@SelectGiftQuery[Giftcount].Gift">@SelectGiftQuery[Giftcount].Gift</option>

                                    }
                                    Giftcount++;
                                }
                            }
                        }

                    </select>
                    <label>Choose your Gift</label>
                </div>
                <button class="btn waves-effect waves-light" type="submit" name="action">
                    Submit
                    <i class="material-icons right">send</i>
                </button>
            </div>
        </div>
    </form>






    <!--Side NAV for Users-->
    <!--authentiseerde gebruikers hebben andere opties dan normale gebruikers-->
    <ul id="slide-out" class="side-nav">
        @{if (WebSecurity.IsAuthenticated == false)
            {
                <li>
                    <a class="waves-effect" href="~/Account/LoginPage.cshtml"> LogIn  </a>
                </li>
                <li>
                    <div class="divider"></div>
                </li>
                <li>
                    <a class="waves-effect" href="~/Account/SignIn.cshtml">Signin</a>
                </li>
            }
            else
            {
                <li>
                    <a class="waves-effect" href="~/Account/Logout.cshtml">Logout <i class="material-icons">Logout</i></a>
                </li>
                <li>
                    <a class="waves-effect" href="~/Members/AccountPage.cshtml">Account <i class="material-icons">face</i></a>
                </li>

            }
        }

    </ul>

    @{// de pagina wordt gerefreshed als er een gift gekozen is.
        if (Request["ChooseGift"] != null)
        {           
            Response.Redirect("~/index.cshtml");
        }


    }


</body>

@RenderPage("~/Shared/_Footer.cshtml")
</html>