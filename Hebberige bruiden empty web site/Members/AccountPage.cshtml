@using WebMatrix.Data;
@using WebMatrix.WebData;
@{ // MemberShip Code



    // c# Database code
    string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\Gift_database.mdf;Integrated Security=True";
    string provider = "System.Data.SqlClient";
    Database db = Database.OpenConnectionString(connectionString, provider);

    // form variable
    string ID = null;
    string Clist = null;
    Boolean refresh = false;
    var Creator_Name = WebSecurity.CurrentUserName;
    string Numberlist = Request["ChooseList"];
    int priority = 0;
    string strpriority = null;
    string CountList = null;
    dynamic Listvalue = null;
    string AddGift = "dont";
    bool Bought = false;
    string color = "";

    dynamic Newlist = null;
    Newlist = Request["Newlist"];
    bool insertlist = false;
    List<string> Giftlist = new List<string>();
    List<string> oldgiftlist = new List<string>();
    List<int> Priority = new List<int>();
    string test = null;
    dynamic giftkey = null;

    oldgiftlist = Session["GiftList"] as List<string>;

    List<string> alteredlist = new List<string>();
    int count = 0;

    dynamic SelectListQueury = null;
    SelectListQueury = db.Query("select distinct Creators_ListID, count(Creators_ListID) as CountOf from Gifts Where Creator_Name=@0 group by Creators_ListID", Creator_Name);

    // als de form chooselist niet ingevuld is, wordt de session gebruikt voor clist(chooselist)
    if (Request["ChooseList"] != null)
    {
        Clist = Request["ChooseList"];
    }
    else
    {
        Clist = Session["NumberList"] as string;
    }
    // als de sessie numberlist niet hetzelfde is als chooselist en hij is niet leeg dan is numberlist wat ingevuld is bij chooselist en clist de sessie
    if (Session["NumberList"] as string != @Request["ChooseList"] && Session["Numberlist"] != null)
    {
        Numberlist = @Request["ChooseList"];
        Clist = Session["NumberList"] as string;
        //giftkey = Session["Giftkey"];
    }// anders is allees clist hetzelfde als de sessie numberlist
    else
    {
        Clist = Session["NumberList"] as string;
    }

    // als de sessie numberlist leeg is, dan moet numberlist gevuld worden door de form chooselist
    if (Session["NumberList"] as string == null)
    {
        Numberlist = Request["ChooseList"];
    }
    // anders is numberlist hetzelfde als de sessie numberlist, hierna wordt de sessie numerlist leeg gemaakt.
    else
    {
        Numberlist = Session["NumberList"] as string;

    }
    Session["NumberList"] = null;
    // als de form newlist ingevuld is, en deze waarde staat nog niet in de db als Creators_ListID dan wordt een lege gift in die lijst aangemaakt.
    if (Newlist != null)
    {
        foreach (dynamic row in SelectListQueury)
        {
            int Liststring = row.Creators_Listid;
            if (Liststring.ToString() == Newlist)
            {
                insertlist = false;
                break;
            }
            else
            {
                insertlist = true;
            }

        }
        if (insertlist == true)
        {
            db.Execute("insert INTO Gifts (Gift,GiftKey,Priority,Creator_Name,Creators_ListID,Bought) VALUES('','1','1',@0,@1,0)", Creator_Name, Newlist);
        }
    }
    dynamic Giftquery = db.Query("Select * from Gifts where Creators_ListID = @0 AND Creator_Name = @1", Numberlist, Creator_Name);
    dynamic giftrequest = null;
    int listcount = 0;

    // als de form Giftkey ingevuld is, dan is de variable giftkey de waarde in die form
    if (Request["Giftkey"] != null)
    {
        giftkey = Request["GiftKey"];
    }// anders wordt giftkey uit de database gehaald
    else
    {
        if (Giftquery.Count != 0)
        {
            giftkey = Giftquery[0].giftkey;
        }
    }

    // als oldgift list een waarde heeft en de eerst gift ingevuld is, dan worden de lijsten oldgiftlist en alterdlist vergeleken, en aangepast in de database
    if (oldgiftlist != null && Request["Gift" + count] != null)
    {
        foreach (dynamic row in oldgiftlist)
        {
            giftrequest = Request["Gift" + count];
            strpriority = Request["Priority Gift" + count];
            priority = Convert.ToInt16(strpriority);
            Priority.Add(priority);
            alteredlist.Add(giftrequest);
            count++;
        }
        count = 0;
        foreach (dynamic row in alteredlist)
        {
            db.Execute("update Gifts set Gift = @0 , GiftKey = @1, Priority = @2 where Gift = @3 AND Creators_ListID = @4 AND Creator_Name = @5 ", alteredlist[count], giftkey, Priority[count], oldgiftlist[count], Numberlist, Creator_Name);
            count++;
        }


    }

    // als er geen lijst is van de gebruiker(bij een nieuwegebruiker) dan wordt er een lege gift voor die gebruiker aangemaakt, met als newlist 1
    if (SelectListQueury.Count == 0)
    {
        Newlist = 1;
        db.Execute("insert INTO Gifts (Gift,GiftKey,Priority,Creator_Name,Creators_ListID) VALUES('','1','1',@0,@1)", Creator_Name, Newlist);
    }
}


<!DOCTYPE html>
<html lang="en">

<body>
    <!-- Render Shared Header-->
    @RenderPage("~/Shared/_Header.cshtml")

    <!-- Page Layout here -->
    <!-- de dropdown menu/form wordt aangemaakt, in deze dropdown staan de verschillende lijsten van de gebruiker-->
    <div class="row">
        <div class=" col s5 m5 l5">
            <form method="post">
                @AntiForgery.GetHtml()
                <div class="row">
                    <div class=" input-field col s10 m10 l10">
                        <select name="ChooseList">
                            <option value="@Numberlist" selected>@Numberlist  </option>
                            @{ int Giftcount = 0;
                                if (SelectListQueury.Count != 0)
                                {
                                    foreach (dynamic row in SelectListQueury)
                                    {

                                        int CountListint = SelectListQueury[Giftcount].Creators_ListID;
                                        CountList = CountListint.ToString();
                                        <option value="@CountList"> @CountList </option>
                                        Giftcount++;

                                    }
                                    if (Request["ChooseList"] != null)
                                    {
                                        refresh = true;
                                    }
                                }
                            }
                        </select>
                        <label>Choose your GiftList</label>
                    </div>
                    <button class="btn waves-effect waves-light" type="submit" name="action">
                        Submit
                        <i class="material-icons right">send</i>
                    </button>
                </div>
            </form>
        </div>
        <!--de form newlist wordt gemaakt, als deze wordt ingevuld wordt er een nieuwe lijst gemaakt voor de gebruiker-->
        <form method="post">
            @AntiForgery.GetHtml()
            <div class=" = col s6 m6 l6">
                <div class=" input-field">
                    <input name="Newlist" id="Newlist" type="number" class="validate" value="@Newlist" />
                    <label for="Newlist">New list</label>
                </div>
                <button class="btn waves-effect waves-light" type="submit" name="action">
                    Create NewList
                </button>
            </div>
        </form>
    </div>



    <form method="post">
        @AntiForgery.GetHtml()
        @{
            // per gift in de lijst wordt er een form aangemaakt, hier kan de gift worden aangepast, de prioriteit worden veranderd
            // wanneer de lijst wordt submit, en de laatste waarde is niet leeg, dan wordt er een nieuwe lege form gemaakt.
            // Als de gift gekocht is wordt hij ipv blauw, groen.
            int Listcount = 0;

            foreach (dynamic row in Giftquery)
            {
                String Name = "Gift" + Listcount;
                string PName = "Priority Gift" + Listcount;

                if (alteredlist.Count == 0)
                {
                    Listvalue = Giftquery[Listcount].Gift;
                    priority = Giftquery[Listcount].Priority;
                    Bought = Giftquery[Listcount].Bought;

                }
                else
                {
                    Listvalue = Giftquery[Listcount].Gift;
                    priority = Giftquery[Listcount].Priority;
                    Bought = Giftquery[Listcount].Bought;

                }
                if(Bought == true)
                {
                     color = "green";
                }
                else
                {
                     color = "blue";
                }
                <div class="row s12 m12 l12">
                    <div class="input-field col s5 m5 l5 @color">
                        <input value="@Listvalue" id="@Name" type="text" class="validate" name="@Name">
                        <label class="active" for="@Name">@Name </label>
                    </div>
                    <div class="container s1 m1 l1 @color"></div>
                    <div class="input-field col s6 m6 l6">
                        <input value="@priority" id="@PName" type="number" class="validate" name="@PName">
                        <label class="active" for="@PName">@PName </label>
                    </div>
                </div>
                Listcount++;
                Giftlist.Add(Listvalue);
                Priority.Add(priority);

            }
            if (Giftlist.Count != 0 && Giftlist[0] != null)
            {
                if (Giftlist.Last<string>() != "")
                {
                    db.Execute("insert INTO Gifts(Gift, GiftKey, Priority, Creator_Name, Creators_ListID) VALUES('', @0, @1, @2, @3)", giftkey, priority + 1, Creator_Name, Numberlist);
                    refresh = true;
                }
            }
            // hier kan je de giftkey van de lijst veranderen.   Deze veranderd de giftkey van alle gifts in de lijst
            giftkey = db.Query("Select GiftKey from Gifts where Creators_ListID = @0 AND Creator_Name = @1", Numberlist, Creator_Name);
            { }
            if (giftkey.Count != 0)
            {
                <div class="input-field col s12">
                    <input value="@giftkey[0].GiftKey" id="Giftkey" type="text" class="validate" name="GiftKey" required>
                    <label class="active" for="Giftkey">Giftkey</label>
                </div>
            }
            if (Request["GiftKey"] != null)
            {
                refresh = true;
            }
        }
        <div class="row col s4 m4 l4">
            <button class="btn waves-effect waves-light" type="submit" name="submit">
                Submit
                <i class="material-icons right">send</i>
            </button>
        </div>
    </form>
    <!--Side NAV for Users-->
    <!--authentiseerde gebruikers hebben andere opties dan normale gebruikers-->
    <ul id="slide-out" class="side-nav">

        <li>
            <a class="waves-effect" href="~/index.cshtml">Home <i class="material-icons">home</i></a>
        </li>
        @{if (WebSecurity.IsAuthenticated == false)
            {
                <li>
                    <a class="waves-effect" href="~/Account/LoginPage.cshtml"> LogIn  </a>
                </li>
                <li>
                    <div class="divider"></div>
                </li>
                <li>
                    <a class="waves-effect" href="~/Account/SignIn.cshtml">Signin</a>
                </li>
            }
            else
            {
                <li>
                    <a class="waves-effect" href="~/Account/Logout.cshtml">Logout <i class="material-icons">Logout</i></a>
                </li>

            }
        }
    </ul>




    <!--C#-->
    @{
        // hier worden de sessies gemaakt, deze zijn nodig om na een submit/refresh de forms weer correct te vullen
        AddGift = "";
        Session["GiftList"] = Giftlist;
        Session["SPriority"] = Priority;
        Session["GiftKey"] = giftkey;

        if (Request["ChooseList"] != null)
        {

            Session["NumberList"] = Request["ChooseList"]; ;
            //string test = Request["ChooseList"];
            //Clist = Session["NumberList"] as string;
        }
        else
        {

            Session["NumberList"] = Numberlist;
        }

        if (Request["Newlist"] != null)
        {
            Session["NumberList"] = Newlist;
            refresh = true;
        }
        if (refresh == true)
        {
            Response.Redirect("~/Members/AccountPage");
        }

    }

    @RenderPage("~/Shared/_Footer.cshtml")


</body>

</html>